# .github/workflows/bot_prosperidad_divina.yml
name: 🙏 Bot Prosperidad Divina - Comentarios Automáticos

on:
  schedule:
    # Ejecutar cada 4 horas para máxima cobertura
    - cron: '0 */4 * * *'  # 00:00, 04:00, 08:00, 12:00, 16:00, 20:00 UTC
  workflow_dispatch:  # Permitir ejecución manual

env:
  PYTHON_VERSION: '3.9'

jobs:
  bendecir-comentarios:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Descargar repositorio
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: 🐍 Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: 📦 Instalar dependencias
      run: |
        pip install google-generativeai google-api-python-client python-dateutil
        
    - name: 🕒 Obtener fecha y hora actual
      id: datetime
      run: |
        echo "fecha=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
        echo "hora=$(date +'%H:%M')" >> $GITHUB_OUTPUT
        echo "timestamp=$(date +'%Y%m%d_%H%M%S')" >> $GITHUB_OUTPUT
        echo "fecha_readable=$(date +'%d de %B')" >> $GITHUB_OUTPUT
        
    - name: 👑 Ejecutar Bot Prosperidad Divina
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
        CHANNEL_ID: ${{ secrets.CHANNEL_ID }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        python bot_prosperidad_divina_automatico.py
        
    - name: 📊 Generar reporte de bendiciones
      run: |
        echo "# 👑 Reporte Prosperidad Divina - ${{ steps.datetime.outputs.fecha_readable }} ${{ steps.datetime.outputs.hora }}" > REPORTE_BENDICIONES.md
        echo "" >> REPORTE_BENDICIONES.md
        echo "## ✨ Ministerio Digital de Hoy:" >> REPORTE_BENDICIONES.md
        echo "" >> REPORTE_BENDICIONES.md
        
        if [ -f "stats_prosperidad_divina.json" ]; then
          python -c "
import json
import datetime
try:
    with open('stats_prosperidad_divina.json', 'r') as f:
        stats = json.load(f)
    
    print(f\"- 🎯 **Comentarios bendecidos:** {stats.get('respuestas_exitosas', 0)}\")
    print(f\"- 👑 **Gemini Pro usado:** {stats.get('pro_usado', 0)}/46 (calidad premium)\")
    print(f\"- ⚡ **Gemini Flash usado:** {stats.get('flash_usado', 0)}/1450 (respuestas rápidas)\")
    print(f\"- 💫 **Total bendiciones:** {stats.get('respuestas_exitosas', 0)}/1496 diarias\")
    print(f\"- 🙏 **Peticiones de oración:** {stats.get('peticiones_oracion', 0)}\")
    print(f\"- 🎉 **Testimonios celebrados:** {stats.get('testimonios_prosperidad', 0)}\")
    print(f\"- 💎 **Respuestas de abundancia:** {stats.get('respuestas_abundancia', 0)}\")
    print(f\"- 📺 **Videos monitoreados:** {stats.get('videos_procesados', 0)}\")
    print(f\"- 📈 **Backlog procesado:** {stats.get('backlog_procesado', 0)}\")
    print(f\"- ⏰ **Última bendición:** {stats.get('ultima_ejecucion', 'N/A')[:16]}\")
    
    # Calcular eficiencia
    total_usado = stats.get('pro_usado', 0) + stats.get('flash_usado', 0)
    eficiencia = (total_usado / 1496) * 100 if total_usado > 0 else 0
    print(f\"- 📊 **Eficiencia del día:** {eficiencia:.1f}% de capacidad usada\")
    
except Exception as e:
    print('- ❌ **Primera ejecución o error en estadísticas**')
    print(f'- 🔧 **Error:** {str(e)}')
" >> REPORTE_BENDICIONES.md
        else
          echo "- ⚠️ **Primera ejecución del bot - inicializando sistema**" >> REPORTE_BENDICIONES.md
        fi
        
        echo "" >> REPORTE_BENDICIONES.md
        echo "## 📺 Videos del Ministerio Monitoreados:" >> REPORTE_BENDICIONES.md
        echo "" >> REPORTE_BENDICIONES.md
        
        if [ -f "videos_prosperidad_procesados.json" ]; then
          python -c "
import json
try:
    with open('videos_prosperidad_procesados.json', 'r') as f:
        videos = json.load(f)
    
    for video in videos.get('videos', []):
        titulo = video.get('titulo', 'Video')[:50]
        tipo = video.get('tipo_detectado', 'general')
        
        # Iconos por tipo de video
        iconos = {
            'urgente': '⚡',
            'arcangel_miguel': '⚔️', 
            'jesus': '✝️',
            'bendiciones': '👑',
            'oracion': '🙏',
            'prosperidad': '💎',
            'mensaje_general': '📺'
        }
        icono = iconos.get(tipo, '📺')
        
        print(f\"- {icono} **{titulo}{'...' if len(titulo) == 50 else ''}**\")
        print(f\"  - Tipo: {tipo.replace('_', ' ').title()}\")
        print(f\"  - Comentarios nuevos: {video.get('comentarios_nuevos', 0)}\")
        print(f\"  - Bendiciones enviadas: {video.get('respuestas_generadas', 0)}\")
        print(f\"  - Última revisión: {video.get('ultima_revision', 'N/A')[:16]}\")
        print()
except Exception as e:
    print('- ❌ **Error leyendo videos procesados**')
" >> REPORTE_BENDICIONES.md
        else
          echo "- ⚠️ **Primera ejecución - inicializando monitoreo de videos**" >> REPORTE_BENDICIONES.md
        fi
        
        echo "" >> REPORTE_BENDICIONES.md
        echo "---" >> REPORTE_BENDICIONES.md
        echo "*🔄 Próxima ronda de bendiciones en 4 horas*" >> REPORTE_BENDICIONES.md
        echo "*💝 Expandiendo el Reino digitalmente, un comentario bendecido a la vez*" >> REPORTE_BENDICIONES.md
        echo "*👑 Prosperity Divina - Ministerio Digital Automatizado*" >> REPORTE_BENDICIONES.md
        
    - name: 💾 Guardar registros de bendiciones
      run: |
        git config --local user.email "prosperidad@divina.ministerio"
        git config --local user.name "Bot Prosperidad Divina"
        
        # Agregar todos los archivos generados
        git add .
        
        # Verificar si hay cambios
        if git diff --staged --quiet; then
          echo "ℹ️ No hay nuevas bendiciones para registrar"
        else
          FECHA="${{ steps.datetime.outputs.fecha_readable }}"
          HORA="${{ steps.datetime.outputs.hora }}"
          
          # Obtener estadísticas para el commit
          if [ -f "stats_prosperidad_divina.json" ]; then
            BENDICIONES=$(python -c "
import json
try:
    with open('stats_prosperidad_divina.json', 'r') as f:
        stats = json.load(f)
    print(stats.get('respuestas_exitosas', 0))
except:
    print('0')
")
          else
            BENDICIONES="0"
          fi
          
          git commit -m "👑 Bendiciones Automáticas - $FECHA $HORA

💎 Bendiciones enviadas: $BENDICIONES
🙏 Ministerio digital activo
⏰ Próxima ejecución en 4 horas
✨ Prosperidad divina expandiéndose automáticamente"
          
          git push
          
          echo "✅ Registro de bendiciones guardado en el repositorio"
        fi
        
    - name: 🚨 Notificación de problemas espirituales
      if: failure()
      run: |
        echo "❌ Hubo un problema en el ministerio digital"
        echo "🔍 Revisa los logs para identificar la causa"
        echo "💡 Posibles causas espirituales:"
        echo "   - Límite de bendiciones diarias alcanzado (1,496)"
        echo "   - Problema de conexión con las APIs celestiales"
        echo "   - Error en credenciales del ministerio"
        echo "   - Videos no encontrados o sin comentarios"
        echo "   - Problemas temporales con Gemini o YouTube"
        echo ""
        echo "🙏 El ministerio continuará en la próxima ejecución"
        echo "👑 La prosperidad divina no se detiene"
        
    - name: 🎉 Celebración de éxito ministerial  
      if: success()
      run: |
        echo "✅ ¡Ronda de bendiciones completada exitosamente!"
        echo "👑 Prosperidad Divina expandiéndose automáticamente"
        echo "💎 Vidas tocadas por mensajes de abundancia"
        echo "🔄 Sistema preparado para la próxima bendición"
        echo "⏰ Nos vemos en 4 horas para más ministerio digital"
